syntax = "proto3";
// Forwarding of AConnected ack from Amazon to UPS
message AConnectedToSim {
	required int64 worldid;
}

// Forwarding of UConnected ack from UPS to Amazon
message UConnectedToSim {
	required int64 worldid;
}

message sendTruck { // sent by Amazon to UPS at the same time Amazon sends APack to sim
	required int32 whid = 1; // warehouse ID for UPS team to use in its UGoPickup message to sim
	required int64 packageid = 2; // packageid for UPS team to use in its UDeliveryLocation message within the UGoDeliver message to sim
	required int32 delX = 3; // x-coordinates of delivery location for UPS team to use in abovementioned UDeliveryLocation message
	required int32 delY = 4; // y-coordinates of delivery location
	optional int64 upsAccount = 5;
	optional string description = 6;
	optional int32 whX = 7; // x-coordinates of the warehouse specified by whid, to help UPS choose nearest truck? In case UPS implementing that nicety
	optional int32 whY = 8; // y-coordinates of the above warehouse
}

message truckArrived { // sent by UPS to Amazon
	required int32 whid = 1;
	required int32 truckid = 2;
	required int64 packageid = 3; // since multiple trucks may be headed to same warehouse concurrently, but for different shipments
}

message dispatchTruck { // sent by Amazon to UPS once sim sends 'loaded' notification to Amazon
	required int32 truckid = 1; // corresponds to truckid above sent by UPS in truckArrived message - Amazon needs mapping of truckid to packageid (shipid)
	required int64 packageid = 2; // corresponds to packageid above - UPS needs mapping of packageid to the UDeliveryLocation information above
}

message packageDelivered { // sent by UPS to Amazon as a forwarding of sim's 'delivered' notification to UPS
	required int64 packageid = 1;
}
